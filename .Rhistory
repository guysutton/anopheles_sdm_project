class(ext)
ggplot() +
# Plot Australia boundary
geom_spatraster(data = ext, fill = NA)
# Plot publication-quality figure
ggplot() +
# Plot Australia boundary
geom_spatvector(data = ext, fill = NA)
# Plot publication-quality figure
ggplot() +
# Plot Australia boundary
geom_spatvector(data = ext, fill = NA) +
# Control axis and legend labels
labs(
x = "Longitude",
y = "Latitude"
) +
# Crops map to just the geographic extent of Australia
coord_sf(
xlim = c(-20, 55),
ylim = c(-37.5, 40),
crs = 4326,
expand = FALSE
)
# Change ggplot theme
theme_set(
theme_classic() +
theme(
panel.border = element_rect(colour = "black",
fill = NA),
axis.text = element_text(colour = "black"),
axis.title.x = element_text(margin = unit(c(2, 0, 0, 0),
"mm")),
axis.title.y = element_text(margin = unit(c(0, 4, 0, 0),
"mm")),
legend.position = "none"
)
)
# Set the theme for the maps
theme_opts <- list(
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_rect(fill = 'white', colour = NA),
plot.background = element_rect(),
axis.line = element_blank(),
axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
plot.title = element_text(colour = "black"),
panel.border = element_rect(fill = NA),
legend.key = element_blank()
)
)
# Plot publication-quality figure
ggplot() +
# Plot Australia boundary
geom_spatvector(data = ext, fill = NA) +
# Control axis and legend labels
labs(
x = "Longitude",
y = "Latitude"
) +
# Crops map to just the geographic extent of Australia
coord_sf(
xlim = c(-20, 55),
ylim = c(-37.5, 40),
crs = 4326,
expand = FALSE
)
class(ext)
# Convert GPS points into a 'terra::spatVect' object
gps_pts <- df_raw %>%
terra::vect(
.,
geom = c("lon", "lat"),
crs = "",
keepgeom = FALSE
)
head(gps_pts)
# Convert GPS points into a 'terra::spatVect' object
gps_pts <- df_raw %>%
terra::vect(
.,
geom = c("lon", "lat"),
crs = "",
keepgeom = TRUE
)
head(gps_pts)
class(gps_pts)
gps_pts <- df_raw %>%
# Convert data to long-format
tidyr::pivot_longer(
cols = dplyr::contains("ano_"),
names_to = "species",
values_to = "present"
) %>%
# Subset data to plot different species
dplyr::filter()
terra::vect(
.,
geom = c("lon", "lat"),
crs = "",
keepgeom = TRUE
)
gps_pts <- df_raw %>%
# Convert data to long-format
tidyr::pivot_longer(
cols = dplyr::contains("ano_"),
names_to = "species",
values_to = "present"
)
head(gps_pts)
# Convert GPS points into a 'terra::spatVect' object
gps_pts <- df_raw %>%
# Convert data to long-format
tidyr::pivot_longer(
cols = dplyr::contains("ano_"),
names_to = "species",
values_to = "present"
) %>%
# Subset data to plot different species
dplyr::filter(species %in% c("ano_gambiae")) %>%
terra::vect(
.,
geom = c("lon", "lat"),
crs = "",
keepgeom = TRUE
)
head(gps_pts)
class(gps_pts)
# Plot publication-quality figure
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, fill = NA) +
# Control axis and legend labels
labs(
x = "Longitude",
y = "Latitude"
) +
# Crops map to just the geographic extent of Australia
coord_sf(
xlim = c(-20, 55),
ylim = c(-37.5, 40),
crs = 4326,
expand = FALSE
)
# Plot publication-quality figure
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, fill = NA)
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA)
terra::crs(ext) <- "epsg:4326"
# Get map of Africa to to use as base layer
ext <- rnaturalearth::ne_countries(scale = "medium",
returnclass = "sf") %>%
dplyr::filter(continent == "Africa")
# Convert Africa map to a 'terra::spatVect' object
terra::vect(ext)
terra::plot(ext)
# Set the CRS projection for the current climate layers
# - Use the correct wkt CRS format - no more PROJ4 strings!
terra::crs(ext) <- "epsg:4326"
class(ext)
# Convert Africa map to a 'terra::spatVect' object
terra::as.vect(ext)
# Get map of Africa to to use as base layer
ext <- rnaturalearth::ne_countries(scale = "medium",
returnclass = "sf") %>%
dplyr::filter(continent == "Africa")
class(ext)
# Convert Africa map to a 'terra::spatVect' object
ext <- terra::vect(ext)
terra::plot(ext)
class(ext)
terra::crs(ext) <- "epsg:4326"
terra::crs(ext, describe = T)
# Convert GPS points into a 'terra::spatVect' object
gps_pts <- df_raw %>%
# Convert data to long-format
tidyr::pivot_longer(
cols = dplyr::contains("ano_"),
names_to = "species",
values_to = "present"
) %>%
# Subset data to plot different species
dplyr::filter(species %in% c("ano_gambiae")) %>%
terra::vect(
.,
geom = c("lon", "lat"),
crs = "",
keepgeom = TRUE
)
head(gps_pts)
class(gps_pts)
# Plot publication-quality figure
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, fill = NA)
terra::crs(gps_pts) <- "epsg:4326"
terra::crs(gps_pts, describe = T)
# Plot publication-quality figure
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, fill = NA)
# Plot publication-quality figure
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, fill = NA) +
# Control axis and legend labels
labs(
x = "Longitude",
y = "Latitude"
) +
# Crops map to just the geographic extent of Australia
coord_sf(
xlim = c(-20, 55),
ylim = c(-37.5, 40),
crs = 4326,
expand = FALSE
) +
theme(legend.position = "right")
# Plot publication-quality figure
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, fill = present) +
# Control axis and legend labels
labs(
x = "Longitude",
y = "Latitude"
) +
# Crops map to just the geographic extent of Australia
coord_sf(
xlim = c(-20, 55),
ylim = c(-37.5, 40),
crs = 4326,
expand = FALSE
) +
theme(legend.position = "right")
head(gps_pts)
# Plot publication-quality figure
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, aes(fill = present)) +
# Control axis and legend labels
labs(
x = "Longitude",
y = "Latitude"
) +
# Crops map to just the geographic extent of Australia
coord_sf(
xlim = c(-20, 55),
ylim = c(-37.5, 40),
crs = 4326,
expand = FALSE
) +
theme(legend.position = "right")
head(df_raw)
gps_pts <- df_raw %>%
dplyr::mutate(
dplyr::across(
.cols = ano_gambiae:ano_paludis,
~ as.factor(.x)
)
)
glimpse(gps_pts)
# Convert GPS points into a 'terra::spatVect' object
gps_pts <- df_raw %>%
dplyr::mutate(
dplyr::across(
.cols = ano_gambiae:ano_paludis,
~ as.factor(.x)
)
) %>%
# Convert data to long-format
tidyr::pivot_longer(
cols = dplyr::contains("ano_"),
names_to = "species",
values_to = "present"
) %>%
# Subset data to plot different species
dplyr::filter(species %in% c("ano_gambiae")) %>%
terra::vect(
.,
geom = c("lon", "lat"),
crs = "",
keepgeom = TRUE
)
head(gps_pts)
class(gps_pts)
# Set the CRS projection for the GPS points
# - Use the correct wkt CRS format - no more PROJ4 strings!
terra::crs(gps_pts) <- "epsg:4326"
terra::crs(gps_pts, describe = T)
# Plot publication-quality figure
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, aes(fill = present)) +
# Control axis and legend labels
labs(
x = "Longitude",
y = "Latitude"
) +
# Crops map to just the geographic extent of Australia
coord_sf(
xlim = c(-20, 55),
ylim = c(-37.5, 40),
crs = 4326,
expand = FALSE
) +
theme(legend.position = "right")
# Plot publication-quality figure
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, aes(colour = present)) +
# Control axis and legend labels
labs(
x = "Longitude",
y = "Latitude"
) +
# Crops map to just the geographic extent of Australia
coord_sf(
xlim = c(-20, 55),
ylim = c(-37.5, 40),
crs = 4326,
expand = FALSE
) +
theme(legend.position = "right")
?geom_spatvector
# Plot publication-quality figure
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, color = c("gray80", "gray40")) +
# Control axis and legend labels
labs(
x = "Longitude",
y = "Latitude"
) +
# Crops map to just the geographic extent of Australia
coord_sf(
xlim = c(-20, 55),
ylim = c(-37.5, 40),
crs = 4326,
expand = FALSE
) +
theme(legend.position = "right")
# Plot publication-quality figure
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, colour = c("gray80", "gray40")) +
# Control axis and legend labels
labs(
x = "Longitude",
y = "Latitude"
) +
# Crops map to just the geographic extent of Australia
coord_sf(
xlim = c(-20, 55),
ylim = c(-37.5, 40),
crs = 4326,
expand = FALSE
) +
theme(legend.position = "right")
# Plot publication-quality figure
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, aes(colour = present)) +
# Control axis and legend labels
labs(
x = "Longitude",
y = "Latitude"
) +
# Crops map to just the geographic extent of Australia
coord_sf(
xlim = c(-20, 55),
ylim = c(-37.5, 40),
crs = 4326,
expand = FALSE
) +
theme(legend.position = "right")
# Convert GPS points into a 'terra::spatVect' object
gps_pts <- df_raw %>%
dplyr::mutate(
dplyr::across(
.cols = ano_gambiae:ano_paludis,
~ as.factor(.x)
)
) %>%
# Convert all the '1' scores into "Yes"
dplyr::mutate(
dplyr::across(
.cols = an_gambiae_complex:an_paludis,
~ dplyr::if_else(.x == "1", "Yes", "No")
)
) %>%
# Convert data to long-format
tidyr::pivot_longer(
cols = dplyr::contains("ano_"),
names_to = "species",
values_to = "present"
) %>%
# Subset data to plot different species
dplyr::filter(species %in% c("ano_gambiae")) %>%
terra::vect(
.,
geom = c("lon", "lat"),
crs = "",
keepgeom = TRUE
)
# Convert GPS points into a 'terra::spatVect' object
gps_pts <- df_raw %>%
dplyr::mutate(
dplyr::across(
.cols = ano_gambiae:ano_paludis,
~ as.factor(.x)
)
) %>%
# Convert all the '1' scores into "Yes"
dplyr::mutate(
dplyr::across(
.cols = ano_gambiae:ano_paludis,
~ dplyr::if_else(.x == "1", "Yes", "No")
)
) %>%
# Convert data to long-format
tidyr::pivot_longer(
cols = dplyr::contains("ano_"),
names_to = "species",
values_to = "present"
) %>%
# Subset data to plot different species
dplyr::filter(species %in% c("ano_gambiae")) %>%
terra::vect(
.,
geom = c("lon", "lat"),
crs = "",
keepgeom = TRUE
)
# Set the CRS projection for the GPS points
# - Use the correct wkt CRS format - no more PROJ4 strings!
terra::crs(gps_pts) <- "epsg:4326"
terra::crs(gps_pts, describe = T)
# Plot publication-quality figure
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, aes(colour = present)) +
# Control axis and legend labels
labs(
x = "Longitude",
y = "Latitude",
colour = "Recorded"
) +
# Crops map to just the geographic extent of Australia
coord_sf(
xlim = c(-20, 55),
ylim = c(-37.5, 40),
crs = 4326,
expand = FALSE
) +
theme(legend.position = "right")
# Plot GPS records
ggplot() +
# Plot Africa base layer
geom_spatvector(data = ext, fill = NA) +
# Plot Africa base layer
geom_spatvector(data = gps_pts, aes(colour = present)) +
# Control axis and legend labels
labs(
x = "Longitude",
y = "Latitude",
colour = "Recorded"
) +
# Crops map to just the geographic extent of Australia
coord_sf(
xlim = c(-20, 55),
ylim = c(-37.5, 40),
crs = 4326,
expand = FALSE
) +
# Add a facet for GPS presences vs absences
facet_wrap(~ present, nrow = 1) +
theme(legend.position = "right")
